name: Simple TelematicsHQ CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  DOTNET_VERSION: '9.0.x'
  NODE_VERSION: '20.19.0'

jobs:
  # Backend Tests
  backend:
    name: Backend (.NET)
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Restore & Build
      run: |
        dotnet restore TelematicsDataPlatform.sln
        dotnet build TelematicsDataPlatform.sln --no-restore --configuration Release

    - name: Unit Tests (No Database)
      run: dotnet test TelematicsTests/TelematicsTests.csproj --filter "Category!=Integration" --no-build --configuration Release

  # Frontend Tests
  frontend:
    name: Frontend (Angular)
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: 'telematics-ui/package-lock.json'

    - name: Install & Test
      working-directory: ./telematics-ui
      run: |
        npm ci
        npm run test:ci
        npm run build

  # Docker Build
  docker:
    name: Docker Build
    runs-on: ubuntu-latest
    needs: [backend, frontend]
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and Push
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile.fullstack
        push: true
        tags: |
          ghcr.io/${{ github.repository }}/telematics-fullstack:latest
          ghcr.io/${{ github.repository }}/telematics-fullstack:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  # Security Scan
  security:
    name: Security Scan
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Run Trivy
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'table'
        exit-code: '0'