version: '3.8'

services:
  # SQL Server for CI testing
  sql-server-ci:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      - SA_PASSWORD=YourStrong!Passw0rd
      - ACCEPT_EULA=Y
    ports:
      - "1433:1433"
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P 'YourStrong!Passw0rd' -Q 'SELECT 1'"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

  # Backend API for integration testing
  telematics-api-ci:
    build:
      context: ../
      dockerfile: TelematicsApi/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Testing
      - ConnectionStrings__DefaultConnection=Server=sql-server-ci,1433;Database=TelematicsDB_CI;User Id=sa;Password=YourStrong!Passw0rd;TrustServerCertificate=true;MultipleActiveResultSets=true
    ports:
      - "5000:80"
    depends_on:
      sql-server-ci:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend for integration testing
  telematics-ui-ci:
    build:
      context: ../telematics-ui
      dockerfile: Dockerfile
    ports:
      - "4200:80"
    depends_on:
      - telematics-api-ci
    environment:
      - API_URL=http://telematics-api-ci:80/api